std	C:\Users\rmokarra\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^namespace std { template<typename _Tp> class shared_ptr {$/;"	namespace	line:1
shared_ptr	C:\Users\rmokarra\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^namespace std { template<typename _Tp> class shared_ptr { $/;"	class	line:1	namespace:std
operator ->	C:\Users\rmokarra\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    _Tp* operator->();$/;"	prototype	line:2	class:std::shared_ptr	access:private	signature:()	returns:_Tp 
reset	C:\Users\rmokarra\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    void reset( Y* ptr );$/;"	prototype	line:3	class:std::shared_ptr	access:private	signature:( Y* ptr )	returns:void 
reset	C:\Users\rmokarra\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    void reset( Y* ptr, Deleter d );$/;"	prototype	line:4	class:std::shared_ptr	access:private	signature:( Y* ptr, Deleter d )	returns:void 
reset	C:\Users\rmokarra\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    void reset( Y* ptr, Deleter d, Alloc alloc );$/;"	prototype	line:5	class:std::shared_ptr	access:private	signature:( Y* ptr, Deleter d, Alloc alloc )	returns:void 
get	C:\Users\rmokarra\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    _T* get() const;$/;"	prototype	line:6	class:std::shared_ptr	access:private	signature:() const
main	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\main.cpp	/^int main() {$/;"	function	line:11	signature:()	returns:int 
_ACCOUNT_H_	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.h	/^#define _ACCOUNT_H_$/;"	macro	line:3
Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.h	/^class Account: public I_Printable {$/;"	class	line:8	inherits:I_Printable
def_name	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.h	/^    static constexpr const char *def_name = "Unnamed Account";$/;"	member	line:10	class:Account	access:private
def_balance	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.h	/^    static constexpr double def_balance = 0.0;$/;"	member	line:11	class:Account	access:private
name	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.h	/^    std::string name;$/;"	member	line:13	class:Account	access:protected
balance	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.h	/^    double balance;$/;"	member	line:14	class:Account	access:protected
Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.h	/^    Account(std::string name = def_name, double balance = def_balance);$/;"	prototype	line:16	class:Account	access:public	signature:(std::string name = def_name, double balance = def_balance)
deposit	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.h	/^    virtual bool deposit(double amount) = 0;$/;"	prototype	line:17	class:Account	access:public	implementation:pure virtual	signature:(double amount)	returns:virtual bool 
withdraw	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.h	/^    virtual bool withdraw(double amount) = 0;$/;"	prototype	line:18	class:Account	access:public	implementation:pure virtual	signature:(double amount)	returns:virtual bool 
print	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.h	/^    virtual void print(std::ostream &os) const override;$/;"	prototype	line:19	class:Account	access:public	implementation:virtual	signature:(std::ostream &os) const	returns:virtual void 
~Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.h	/^    virtual ~Account() = default;$/;"	prototype	line:20	class:Account	access:public	implementation:virtual	signature:()	returns:virtual 
Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.cpp	/^Account::Account(std::string name, double balance) $/;"	function	line:3	class:Account	signature:(std::string name, double balance)	returns:Account :: 
deposit	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.cpp	/^bool Account::deposit(double amount) {$/;"	function	line:7	class:Account	signature:(double amount)	returns:bool Account :: 
withdraw	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.cpp	/^bool Account::withdraw(double amount) {$/;"	function	line:16	class:Account	signature:(double amount)	returns:bool Account :: 
print	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account.cpp	/^void Account::print(std::ostream &os) const  {$/;"	function	line:24	class:Account	signature:(std::ostream &os) const	returns:void Account :: 
Checking_Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Checking_Account.cpp	/^Checking_Account::Checking_Account(std::string name, double balance)$/;"	function	line:3	class:Checking_Account	signature:(std::string name, double balance)	returns:Checking_Account :: 
deposit	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Checking_Account.cpp	/^bool Checking_Account::deposit(double amount) {$/;"	function	line:7	class:Checking_Account	signature:(double amount)	returns:bool Checking_Account :: 
withdraw	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Checking_Account.cpp	/^bool Checking_Account::withdraw(double amount) {$/;"	function	line:11	class:Checking_Account	signature:(double amount)	returns:bool Checking_Account :: 
print	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Checking_Account.cpp	/^void Checking_Account::print(std::ostream &os) const {$/;"	function	line:16	class:Checking_Account	signature:(std::ostream &os) const	returns:void Checking_Account :: 
_SAVINGS_ACCOUNT_H_	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.h	/^#define _SAVINGS_ACCOUNT_H_$/;"	macro	line:2
Savings_Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.h	/^class Savings_Account: public Account {$/;"	class	line:5	inherits:Account
def_name	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.h	/^    static constexpr const char *def_name = "Unnamed Savings Account";$/;"	member	line:7	class:Savings_Account	access:private
def_balance	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.h	/^    static constexpr double def_balance = 0.0;$/;"	member	line:8	class:Savings_Account	access:private
def_int_rate	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.h	/^    static constexpr double def_int_rate = 0.0;$/;"	member	line:9	class:Savings_Account	access:private
int_rate	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.h	/^    double int_rate;$/;"	member	line:11	class:Savings_Account	access:protected
Savings_Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.h	/^    Savings_Account(std::string name = def_name, double balance =def_balance, double int_rate = def_int_rate);    $/;"	prototype	line:13	class:Savings_Account	access:public	signature:(std::string name = def_name, double balance =def_balance, double int_rate = def_int_rate)
deposit	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.h	/^    virtual bool deposit(double amount) override;$/;"	prototype	line:14	class:Savings_Account	access:public	implementation:virtual	signature:(double amount)	returns:virtual bool 
withdraw	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.h	/^    virtual bool withdraw(double amount) override;$/;"	prototype	line:15	class:Savings_Account	access:public	implementation:virtual	signature:(double amount)	returns:virtual bool 
print	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.h	/^    virtual void print(std::ostream &os) const override;$/;"	prototype	line:16	class:Savings_Account	access:public	implementation:virtual	signature:(std::ostream &os) const	returns:virtual void 
~Savings_Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.h	/^    virtual ~Savings_Account() = default;$/;"	prototype	line:17	class:Savings_Account	access:public	implementation:virtual	signature:()	returns:virtual 
Trust_Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.cpp	/^Trust_Account::Trust_Account(std::string name, double balance, double int_rate)$/;"	function	line:3	class:Trust_Account	signature:(std::string name, double balance, double int_rate)	returns:Trust_Account :: 
deposit	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.cpp	/^bool Trust_Account::deposit(double amount) {$/;"	function	line:9	class:Trust_Account	signature:(double amount)	returns:bool Trust_Account :: 
withdraw	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.cpp	/^bool Trust_Account::withdraw(double amount) {$/;"	function	line:16	class:Trust_Account	signature:(double amount)	returns:bool Trust_Account :: 
print	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.cpp	/^void Trust_Account::print(std::ostream &os) const {$/;"	function	line:25	class:Trust_Account	signature:(std::ostream &os) const	returns:void Trust_Account :: 
_I_PRINTABLE_H_	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\I_Printable.h	/^#define _I_PRINTABLE_H_$/;"	macro	line:2
I_Printable	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\I_Printable.h	/^class I_Printable$/;"	class	line:5
operator <<	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\I_Printable.h	/^    friend std::ostream &operator<<(std::ostream &os, const I_Printable &obj);$/;"	prototype	line:7	class:I_Printable	access:friend	signature:(std::ostream &os, const I_Printable &obj)	returns:friend std :: ostream 
print	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\I_Printable.h	/^    virtual void print(std::ostream &os) const = 0;$/;"	prototype	line:9	class:I_Printable	access:public	implementation:pure virtual	signature:(std::ostream &os) const	returns:virtual void 
~I_Printable	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\I_Printable.h	/^    virtual ~I_Printable() = default;$/;"	prototype	line:10	class:I_Printable	access:public	implementation:virtual	signature:()	returns:virtual 
Savings_Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.cpp	/^Savings_Account::Savings_Account(std::string name, double balance, double int_rate)$/;"	function	line:3	class:Savings_Account	signature:(std::string name, double balance, double int_rate)	returns:Savings_Account :: 
deposit	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.cpp	/^bool Savings_Account::deposit(double amount) {$/;"	function	line:11	class:Savings_Account	signature:(double amount)	returns:bool Savings_Account :: 
withdraw	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.cpp	/^bool Savings_Account::withdraw(double amount) {$/;"	function	line:16	class:Savings_Account	signature:(double amount)	returns:bool Savings_Account :: 
print	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Savings_Account.cpp	/^void Savings_Account::print(std::ostream &os) const {$/;"	function	line:20	class:Savings_Account	signature:(std::ostream &os) const	returns:void Savings_Account :: 
_ACCOUNT_UTIL_H_	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account_Util.h	/^#define _ACCOUNT_UTIL_H_$/;"	macro	line:2
display	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account_Util.h	/^void display(const std::vector<Account *> &accounts);$/;"	prototype	line:8	signature:(const std::vector<Account *> &accounts)	returns:void 
deposit	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account_Util.h	/^void deposit(std::vector<Account *> &accounts, double amount);$/;"	prototype	line:9	signature:(std::vector<Account *> &accounts, double amount)	returns:void 
withdraw	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account_Util.h	/^void withdraw(std::vector<Account *> &accounts, double amount);$/;"	prototype	line:10	signature:(std::vector<Account *> &accounts, double amount)	returns:void 
_CHECKING_ACCOUNT_H_	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Checking_Account.h	/^#define _CHECKING_ACCOUNT_H_$/;"	macro	line:2
Checking_Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Checking_Account.h	/^class Checking_Account: public Account {$/;"	class	line:7	inherits:Account
def_name	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Checking_Account.h	/^    static constexpr const char *def_name = "Unnamed Checking Account";$/;"	member	line:9	class:Checking_Account	access:private
def_balance	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Checking_Account.h	/^    static constexpr double def_balance = 0.0;$/;"	member	line:10	class:Checking_Account	access:private
per_check_fee	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Checking_Account.h	/^    static constexpr double per_check_fee = 1.5;$/;"	member	line:11	class:Checking_Account	access:private
Checking_Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Checking_Account.h	/^    Checking_Account(std::string name = def_name, double balance = def_balance);    $/;"	prototype	line:13	class:Checking_Account	access:public	signature:(std::string name = def_name, double balance = def_balance)
withdraw	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Checking_Account.h	/^    virtual bool withdraw(double) override;$/;"	prototype	line:14	class:Checking_Account	access:public	implementation:virtual	signature:(double)	returns:virtual bool 
deposit	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Checking_Account.h	/^    virtual bool deposit(double) override;$/;"	prototype	line:15	class:Checking_Account	access:public	implementation:virtual	signature:(double)	returns:virtual bool 
print	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Checking_Account.h	/^    virtual void print(std::ostream &os) const override;$/;"	prototype	line:16	class:Checking_Account	access:public	implementation:virtual	signature:(std::ostream &os) const	returns:virtual void 
~Checking_Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Checking_Account.h	/^    virtual ~Checking_Account() = default;$/;"	prototype	line:17	class:Checking_Account	access:public	implementation:virtual	signature:()	returns:virtual 
_TRUST_ACCOUNT_H_	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.h	/^#define _TRUST_ACCOUNT_H_$/;"	macro	line:2
Trust_Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.h	/^class Trust_Account : public Savings_Account {$/;"	class	line:6	inherits:Savings_Account
def_name	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.h	/^    static constexpr const char *def_name = "Unnamed Trust Account";$/;"	member	line:8	class:Trust_Account	access:private
def_balance	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.h	/^    static constexpr double def_balance = 0.0;$/;"	member	line:9	class:Trust_Account	access:private
def_int_rate	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.h	/^    static constexpr double def_int_rate = 0.0;$/;"	member	line:10	class:Trust_Account	access:private
bonus_amount	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.h	/^    static constexpr double bonus_amount = 50.0;$/;"	member	line:11	class:Trust_Account	access:private
bonus_threshold	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.h	/^    static constexpr double bonus_threshold = 5000.0;$/;"	member	line:12	class:Trust_Account	access:private
max_withdrawals	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.h	/^    static constexpr int max_withdrawals = 3;$/;"	member	line:13	class:Trust_Account	access:private
max_withdraw_percent	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.h	/^    static constexpr double max_withdraw_percent = 0.2;$/;"	member	line:14	class:Trust_Account	access:private
num_withdrawals	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.h	/^    int num_withdrawals;$/;"	member	line:16	class:Trust_Account	access:protected
Trust_Account	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.h	/^    Trust_Account(std::string name = def_name,  double balance = def_balance, double int_rate = def_int_rate);$/;"	prototype	line:18	class:Trust_Account	access:public	signature:(std::string name = def_name, double balance = def_balance, double int_rate = def_int_rate)
deposit	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.h	/^    virtual bool deposit(double amount) override;$/;"	prototype	line:21	class:Trust_Account	access:public	implementation:virtual	signature:(double amount)	returns:virtual bool 
withdraw	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.h	/^    virtual bool withdraw(double amount) override;$/;"	prototype	line:24	class:Trust_Account	access:public	implementation:virtual	signature:(double amount)	returns:virtual bool 
print	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Trust_Account.h	/^    virtual void print(std::ostream &os) const override;$/;"	prototype	line:25	class:Trust_Account	access:public	implementation:virtual	signature:(std::ostream &os) const	returns:virtual void 
display	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account_Util.cpp	/^void display(const std::vector<Account *> &accounts) {$/;"	function	line:5	signature:(const std::vector<Account *> &accounts)	returns:void 
deposit	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account_Util.cpp	/^void deposit(std::vector<Account *> &accounts, double amount) {$/;"	function	line:12	signature:(std::vector<Account *> &accounts, double amount)	returns:void 
withdraw	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\Account_Util.cpp	/^void withdraw(std::vector<Account *> &accounts, double amount) {$/;"	function	line:23	signature:(std::vector<Account *> &accounts, double amount)	returns:void 
operator <<	C:\Users\rmokarra\Documents\Training\Udemy_FromBeginnerToBeyond\Section16\ChallengeSolution\I_Printable.cpp	/^std::ostream &operator<<(std::ostream &os, const I_Printable &obj) {$/;"	function	line:4	signature:(std::ostream &os, const I_Printable &obj)	returns:std :: ostream 
